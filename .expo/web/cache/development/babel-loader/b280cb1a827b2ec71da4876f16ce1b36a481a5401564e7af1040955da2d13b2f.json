{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([{\n      id: '1',\n      text: 'Item 1'\n    }, {\n      id: '2',\n      text: 'Item 2'\n    }, {\n      id: '3',\n      text: 'Item 3'\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    items = _useState2[0],\n    setItems = _useState2[1];\n  var handleButtonClick = function handleButtonClick() {\n    alert('Button was clicked!');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.headerText,\n        children: \"Super Duper App\"\n      })\n    }), _jsx(FlatList, {\n      data: items,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Text, {\n          style: styles.item,\n          children: item.text\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(Button, {\n      title: \"Click Me!\",\n      onPress: handleButtonClick\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f7f7f7'\n  },\n  header: {\n    height: 60,\n    backgroundColor: '#333',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  headerText: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  item: {\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e5e5e5'\n  }\n});","map":{"version":3,"names":["React","useState","StatusBar","StyleSheet","Text","View","FlatList","Button","jsx","_jsx","jsxs","_jsxs","App","_useState","id","text","_useState2","_slicedToArray","items","setItems","handleButtonClick","alert","style","styles","container","children","header","headerText","data","renderItem","_ref","item","keyExtractor","title","onPress","create","flex","backgroundColor","height","justifyContent","alignItems","marginBottom","color","fontSize","fontWeight","padding","borderBottomWidth","borderBottomColor"],"sources":["C:/Users/danii/OneDrive/Desktop/react-native-jobs/DiscDogSportApp/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StatusBar, StyleSheet, Text, View, FlatList, Button } from 'react-native';\n\nexport default function App() {\n  const [items, setItems] = useState([\n    {id: '1', text: 'Item 1'},\n    {id: '2', text: 'Item 2'},\n    {id: '3', text: 'Item 3'},\n    //... дополнительные элементы\n  ]);\n\n  const handleButtonClick = () => {\n    alert('Button was clicked!');\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.headerText}>Super Duper App</Text>\n      </View>\n      <FlatList\n        data={items}\n        renderItem={({ item }) => <Text style={styles.item}>{item.text}</Text>}\n        keyExtractor={item => item.id}\n      />\n      <Button title=\"Click Me!\" onPress={handleButtonClick} />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f7f7f7',\n  },\n  header: {\n    height: 60,\n    backgroundColor: '#333',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  headerText: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  item: {\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e5e5e5',\n  }\n});\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAA0BZ,QAAQ,CAAC,CACjC;MAACa,EAAE,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAQ,CAAC,EACzB;MAACD,EAAE,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAQ,CAAC,EACzB;MAACD,EAAE,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAE1B,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IALKK,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAOtB,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9BC,KAAK,CAAC,qBAAqB,CAAC;EAC9B,CAAC;EAED,OACEV,KAAA,CAACN,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhB,IAAA,CAACJ,IAAI;MAACiB,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,EACzBhB,IAAA,CAACL,IAAI;QAACkB,KAAK,EAAEC,MAAM,CAACI,UAAW;QAAAF,QAAA,EAAC;MAAe,CAAM;IAAC,CAClD,CAAC,EACPhB,IAAA,CAACH,QAAQ;MACPsB,IAAI,EAAEV,KAAM;MACZW,UAAU,EAAE,SAAAA,WAAAC,IAAA;QAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;QAAA,OAAOtB,IAAA,CAACL,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACQ,IAAK;UAAAN,QAAA,EAAEM,IAAI,CAAChB;QAAI,CAAO,CAAC;MAAA,CAAC;MACvEiB,YAAY,EAAE,SAAAA,aAAAD,IAAI;QAAA,OAAIA,IAAI,CAACjB,EAAE;MAAA;IAAC,CAC/B,CAAC,EACFL,IAAA,CAACF,MAAM;MAAC0B,KAAK,EAAC,WAAW;MAACC,OAAO,EAAEd;IAAkB,CAAE,CAAC,EACxDX,IAAA,CAACP,SAAS;MAACoB,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACtB,CAAC;AAEX;AAEA,IAAMC,MAAM,GAAGpB,UAAU,CAACgC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDX,MAAM,EAAE;IACNY,MAAM,EAAE,EAAE;IACVD,eAAe,EAAE,MAAM;IACvBE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE;EAChB,CAAC;EACDd,UAAU,EAAE;IACVe,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDb,IAAI,EAAE;IACJc,OAAO,EAAE,EAAE;IACXC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}